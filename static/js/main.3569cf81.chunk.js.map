{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","state","text","checked","date","Date","toISOString","slice","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","length","props","add","minDate","console","log","maxDate","className","type","placeholder","this","onChange","id","onClick","htmlFor","min","max","Component","Task","task","active","important","finishDate","style","color","change","delete","finish","toLocaleString","TaskList","tasks","filter","done","sort","a","b","toLowerCase","activeTasks","map","doneTasks","fontSize","App","counter","deleteTask","changeTaskStatus","Array","from","forEach","getTime","addTask","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3569cf81.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./AddTask.css\";\r\n\r\nclass AddTask extends Component {\r\n    state = { \r\n        text:\"\",\r\n        checked:false,\r\n        date: new Date().toISOString().slice(0, 10),\r\n        \r\n     }\r\n\r\n     handleText=(e)=>{\r\n         this.setState({\r\n             text:e.target.value\r\n         })\r\n     }\r\n\r\n     handleCheckbox=(e)=>{\r\n        this.setState({\r\n            checked:e.target.checked\r\n        })\r\n     }\r\n\r\n     handleDate=(e)=>{\r\n         this.setState({\r\n         date: e.target.value\r\n        })\r\n     }\r\n\r\n     handleClick=()=>{\r\n         const { text, checked, date}= this.state\r\n         if(text.length > 2){\r\n        const add = this.props.add(text, date, checked)\r\n        if(add){\r\n            this.setState({\r\n                text:\"\",\r\n                checked:false,\r\n                date:this.minDate\r\n            })\r\n        }else{\r\n            console.log(\"za krótka nazwa\")\r\n        }\r\n    }\r\n     }\r\n\r\n    render() { \r\n\r\n        const minDate = new Date().toISOString().slice(0,10)\r\n        let maxDate = minDate.slice(0,4) *1 + 1;\r\n        maxDate= maxDate + \"-12-31\"\r\n\r\n        return ( \r\n            <div className=\"form\">\r\n                   <input type=\"text\" placeholder=\"dodaj zadanie\" value={this.state.text} onChange={this.handleText}/>\r\n                   <input type=\"checkbox\" checked={this.state.checked}  id=\"important\" onClick={this.handleCheckbox}/>\r\n                   <label htmlFor=\"important\" >Priorytet</label>\r\n                   <br />\r\n                   <label htmlFor=\"date\">Do kiedy zrobić </label>\r\n                   <input type=\"date\" value={this.state.date} min={minDate} max={maxDate} onChange={this.handleDate}/>\r\n                   <button onClick={this.handleClick}>Dodaj</button>\r\n                <hr />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddTask;","import React from 'react';\r\n\r\nconst Task = (props) => {\r\n\r\n    const style ={\r\n        color: 'red',\r\n    }\r\n\r\n    const { text , date, id, active, important, finishDate} = props.task\r\n\r\n    if(active){\r\n    return ( \r\n        <div>\r\n            <p>\r\n            <strong style={important ? style: null}>{text}</strong> - do <span>{date} </span>\r\n            <button onClick={() => props.change(id)}>Zostało zrobione</button>\r\n            <button onClick={()=> props.delete(id)}>X</button>\r\n            </p>\r\n        </div>\r\n     );\r\n    }else {\r\n\r\n        const finish = new Date(finishDate).toLocaleString()\r\n\r\n        return(\r\n            <div>\r\n                <p>\r\n                    <strong>{text}</strong><em> (zrobić do {date})</em><br />\r\n                    -potwierdzenie wykonania <span>{finish}</span>\r\n                    <button onClick={()=> props.delete(id)}>X</button>\r\n                </p>\r\n            </div>\r\n        )}\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\n// import App from './App';\r\nimport Task from './Task';\r\n\r\nconst TaskList = (props) => {\r\n\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n\r\n    // done.sort((a,b)=> {\r\n    //     return b.finishDate - a.finishDate\r\n    // })\r\n\r\n    if(done.length>=2){\r\n\r\n    done.sort((a,b)=> {\r\n        if(a.finishDate < b.finishDate){\r\n            return 1\r\n        }if(a.finishDate > b.finishDate){\r\n            return -1\r\n        }\r\n        return 0 \r\n        }\r\n    )\r\n    }\r\n\r\n    if(active.length >= 2){\r\n        active.sort((a,b)=>{\r\n            a = a.text.toLowerCase()\r\n            b = b.text.toLowerCase()\r\n\r\n        if(a.text < b.text){\r\n            return -1\r\n        }if(a.text > b.text){\r\n            return 1\r\n        }else{\r\n            return 0\r\n        } \r\n        })\r\n    }\r\n\r\n    const activeTasks = active.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change}/>)\r\n    const doneTasks = done.map(task => <Task key={task.id} task={task} delete={props.delete} change={props.change}/>)\r\n    return ( \r\n        <>\r\n        <div className=\"active\">\r\n            <h1>Zadania do zrobienia</h1>\r\n            {activeTasks.length > 0 ? activeTasks : <p>brak zadań, ale jesteś szczęśliwym człowiekiem!</p>}\r\n        </div>\r\n\r\n        <hr />\r\n\r\n        <div className=\"done\">\r\n            <h3>Zadania zrobione <em>({done.length})</em></h3>\r\n            {done.length>5 && <span style={{fontSize: \"10px\"}}>Wyświetlonych jest jedynie 5 ostatnich zadań</span>}\r\n            {doneTasks.slice(0,5)}\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default TaskList;","import React, { Component } from 'react';\nimport './App.css';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList';\nimport Task from './Task';\n\nclass App extends Component {\n  counter = 9\n\n  state = { \n    tasks: [\n      {\n        id: 0,\n        text:\"Zagrać wreszcie w Wiedźmina 3\",\n        date:'2021-02-15',\n        important:false,\n        active:true,\n        finishDate:true\n      },\n      {\n        id: 1,\n        text:\"Nauczyć się TypeScript\",\n        date:'2022-02-15',\n        important:true,\n        active:true,\n        finishDate:true\n      },\n      {\n        id: 2,\n        text:\"Nauczyć się NodeJS\",\n        date:'2021-09-15',\n        important:true,\n        active:false,\n        finishDate:true\n      },\n      {\n        id: 3,\n        text:\"Ogarnąć flexbox i grid\",\n        date:'2021-10-15',\n        important:false,\n        active:false,\n        finishDate:true\n      },\n      {\n        id: 4,\n        text:\"Nauczyc się JS\",\n        date:'2021-12-31',\n        important:true,\n        active:true,\n        finishDate:true\n      },\n      {\n        id: 5,\n        text:\"Nauczyć się React\",\n        date:'2021-11-30',\n        important:true,\n        active:true,\n        finishDate:true\n      },\n      {\n        id: 6,\n        text:\"Ogarnąć HTML\",\n        date:'2021-10-15',\n        important:false,\n        active:true,\n        finishDate:true\n      },\n      {\n        id: 7,\n        text:\"Ogarnąć CSS\",\n        date:'2021-11-15',\n        important:false,\n        active:true,\n        finishDate:true\n      },\n     \n    ]\n   }\n\n   deleteTask=(id)=>{\n     console.log(\"delete elementu o id \" + id);\n    //  const tasks = [...this.state.tasks];\n    //  const index = tasks.findIndex(task => task.id === id);\n    //  tasks.splice(index, 1);\n    // //  console.log(tasks)\n    //  this.setState({\n    //    tasks:tasks\n    //  })\n\n    let tasks = [...this.state.tasks];\n    tasks = tasks.filter(task => task.id !== id);\n    this.setState({\n      tasks\n    })\n   }\n\n\n\n   changeTaskStatus=(id)=>{\n     console.log(\"Change w stanie elementu o id \" + id)\n     const tasks = Array.from(this.state.tasks);\n     tasks.forEach(task => {\n       if(task.id === id){\n        task.active = false;\n        task.finishDate = new Date().getTime()\n       }\n     })\n     this.setState({\n       tasks\n     })\n   }\n\n   addTask=(text, date, important)=>{\n     const task ={\n      id: this.counter,\n      text: text,\n      date:date,\n      important:important,\n      active:true,\n      finishDate:true\n     }\n     this.counter++\n     this.setState(prevState=>({\n      tasks:[...prevState.tasks, task]\n     }))\n     return true\n   }\n\n  render() { \n    return ( \n      <div className=\"App\">\n      <AddTask  add={this.addTask}/>\n      <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus} />\n      {/* // <Task > */}\n      </div>\n     );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}